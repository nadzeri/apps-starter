export const awesomeappErrorsKeys = {
  NOT_FOUND: "NOT_FOUND",
  UNAUTHORIZED: "UNAUTHORIZED",
  BAD_REQUEST: "BAD_REQUEST",
  SERVER_ERROR: "SERVER_ERROR",
  USER_NOT_FOUND: "USER_NOT_FOUND",
  EAP_SUBSCRIPTION_PLAN_NOT_FOUND: "USER_EAP_SUBSCRIPTION_PLAN_NOT_FOUND",
  EAP_SUBSCRIPTION_PLAN_EXPIRED: "USER_EAP_SUBSCRIPTION_PLAN_EXPIRED",
  EAP_SUBSCRIPTION_PLAN_CODE_INVALID: "EAP_SUBSCRIPTION_PLAN_CODE_INVALID",
  EAP_FREE_SESSION_BENEFIT_MAX_REDEMPTION_INVALID: "EAP_FREE_SESSION_BENEFIT_MAX_REDEMPTION_INVALID",
  NOT_ENOUGH_FREE_SESSIONS_CREDITS: "NOT_ENOUGH_FREE_SESSIONS_CREDITS",
  SESSION_SLOT_NOT_AVAILABLE: "SESSION_SLOT_NOT_AVAILABLE",
  SESSION_IS_NOT_CANCELLABLE: "SESSION_IS_NOT_CANCELLABLE",
  SESSION_IS_NOT_RESCHEDULEABLE: "SESSION_IS_NOT_RESCHEDULABLE",
  GENERIC: "GENERIC",
  CANT_CANCEL_ONGOING_SESSION: "CANT_CANCEL_ONGOING_SESSION",
  CANT_JOIN_CANCELLED_SESSION: "CANT_JOIN_CANCELLED_SESSION",
  CANT_LEFT_NOT_JOINED_SESSION: "CANT_LEFT_NOT_JOINED_SESSION",
  MEMBER_CANT_MARK_CLINICIAN_DNA_1: "MEMBER_CANT_MARK_CLINICIAN_DNA_1",
  MEMBER_CANT_MARK_CLINICIAN_DNA_2: "MEMBER_CANT_MARK_CLINICIAN_DNA_2",
  CLINICIAN_CANT_MARK_MEMBER_DNA_1: "CLINICIAN_CANT_MARK_MEMBER_DNA_1",
  CLINICIAN_CANT_MARK_MEMBER_DNA_2: "CLINICIAN_CANT_MARK_MEMBER_DNA_2",
  SESSION_IS_NOT_BOOKED: "SESSION_NOT_BOOKED",
  DUPLICATE_LOG_TYPE: "DUPLICATE_LOG_TYPE",
  CLINICIAN_EMAIL_ALREADY_EXISTS: "CLINICIAN_EMAIL_ALREADY_EXISTS",
  CLINICIAN_DOES_NOT_EXIST: "CLINICIAN_DOES_NOT_EXIST",
  SESSION_STATUS_NOT_FOUND: "SESSION_STATUS_NOT_FOUND",
  SESSION_ALREADY_RATED: "SESSION_ALREADY_RATED",
  STAFF_EMAIL_ALREADY_EXISTS: "STAFF_EMAIL_ALREADY_EXISTS",
  USER_EMAIL_ALREADY_EXISTS: "USER_EMAIL_ALREADY_EXISTS",
  KINDE_IDENTITY_NOT_FOUND: "KINDE_IDENTITY_NOT_FOUND",
} as const;

const awesomeappErrors = {
  [awesomeappErrorsKeys.NOT_FOUND]: "could not be found",
  [awesomeappErrorsKeys.UNAUTHORIZED]: "you are not authorized to perform this action",
  [awesomeappErrorsKeys.BAD_REQUEST]: "The request was malformed or invalid",
  [awesomeappErrorsKeys.SERVER_ERROR]: "An internal server error occurred",
  [awesomeappErrorsKeys.USER_NOT_FOUND]: "User not found",
  [awesomeappErrorsKeys.EAP_SUBSCRIPTION_PLAN_NOT_FOUND]: "EAP subscription plan not found",
  [awesomeappErrorsKeys.EAP_SUBSCRIPTION_PLAN_EXPIRED]: "EAP subscription plan has expired",
  [awesomeappErrorsKeys.SESSION_SLOT_NOT_AVAILABLE]: "Selected time slot is no longer available",
  [awesomeappErrorsKeys.NOT_ENOUGH_FREE_SESSIONS_CREDITS]: "Not enough free sessions credits",
  [awesomeappErrorsKeys.SESSION_IS_NOT_CANCELLABLE]: "Session can not be cancelled",
  [awesomeappErrorsKeys.SESSION_IS_NOT_RESCHEDULEABLE]: "Session can not be rescheduled",
  [awesomeappErrorsKeys.GENERIC]: "Something went wrong",
  [awesomeappErrorsKeys.CANT_CANCEL_ONGOING_SESSION]: "Cannot cancel ongoing session",
  [awesomeappErrorsKeys.CANT_JOIN_CANCELLED_SESSION]: "Cannot join cancelled session",
  [awesomeappErrorsKeys.MEMBER_CANT_MARK_CLINICIAN_DNA_1]: "Cannot mark clinician did not attend without member joining session",
  [awesomeappErrorsKeys.MEMBER_CANT_MARK_CLINICIAN_DNA_2]: "Cannot mark clinician did not attend after clinician joined session",
  [awesomeappErrorsKeys.CLINICIAN_CANT_MARK_MEMBER_DNA_1]: "Cannot mark member did not attend without clinician joining session",
  [awesomeappErrorsKeys.CLINICIAN_CANT_MARK_MEMBER_DNA_2]: "Cannot mark member did not attend after member joined session",
  [awesomeappErrorsKeys.SESSION_IS_NOT_BOOKED]: "Session is not booked",
  [awesomeappErrorsKeys.DUPLICATE_LOG_TYPE]: "Duplicate log type",
  [awesomeappErrorsKeys.CLINICIAN_EMAIL_ALREADY_EXISTS]: "A clinician with this email already exists",
  [awesomeappErrorsKeys.CLINICIAN_DOES_NOT_EXIST]: "Clinician can not be found",
  [awesomeappErrorsKeys.CANT_LEFT_NOT_JOINED_SESSION]: "Cannot left session before joining",
  [awesomeappErrorsKeys.EAP_SUBSCRIPTION_PLAN_CODE_INVALID]: "Invalid code, use letters or numbers only without spaces",
  [awesomeappErrorsKeys.EAP_FREE_SESSION_BENEFIT_MAX_REDEMPTION_INVALID]: "Invalid max redemption must be greater than 0",
  [awesomeappErrorsKeys.SESSION_ALREADY_RATED]: "Session already rated",
  [awesomeappErrorsKeys.STAFF_EMAIL_ALREADY_EXISTS]: "A staff with this email already exists",
  [awesomeappErrorsKeys.KINDE_IDENTITY_NOT_FOUND]: "Kinde Identity is not found",
  [awesomeappErrorsKeys.USER_EMAIL_ALREADY_EXISTS]: "A user with this email already exists",
} as const;

export const awesomeappErrorsResolver = (key: string) => {
  return awesomeappErrors[key as keyof typeof awesomeappErrors] ?? awesomeappErrors[awesomeappErrorsKeys.GENERIC];
};
